library(dplyr)
library(ggplot2)
library(lubridate)
setwd("C:/Users/Hussain/Documents/GitHub/ReproducibleResearch/RepData_PeerAssessment1")
if(!file.exists("activity.csv")) {
unzip("activity.zip")
}
if(!exists(activityData)) {
activityData <- read.csv("activity.csv", header = TRUE)
}
if(!exists("activityData")) {
activityData <- read.csv("activity.csv", header = TRUE)
}
activityData$date <- ymd(activityData$date)
steps <- activityData %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarise(steps = sum(steps)) %>%
print
ggplot(steps, aes(x = steps)) +
geom_histogram(binwidth = 1000) +
labs(title = "Steps per Day - Histogram", xlab = "Steps per Day", ylab = "Frequency")
stepsMean <- mean(steps$steps, na.rm = TRUE)
stepsMean
stepsMedian <- median(steps$steps, na.rm = TRUE)
stepsMean
stepsMedian
intervalAvgSteps <- activityData %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(steps = mean(steps))
ggplot(intervalAvgSteps, aes(x = interval, y = steps)) +
geom_line()
intervalAvgSteps[which(intervalAvgSteps$steps), ]
intervalAvgSteps[which.max(intervalAvgSteps$steps), ]
sum(is.na(activityData$steps))
activityDataFill <- activityData
naData <- is.na(activityDataFill$steps)
intervalAvg <- tapply(activityDataFill$steps, activityDataFill$interval, mean, na.rm = TRUE, simplify = TRUE)
activityDataFill$steps[naData] <- intervalAvg[as.character(activityDataFill$interval[naData])]
sum(is.na(activityDataFill$steps))
stepsFilled <- activityDataFill %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
ggplot(activityDataFill, aes(x = steps)) +
geom_histogram(binwidth = 1000) +
labs(title = "Histogram of Steps per Day with Imputed Missing Values", xlab = "Steps per Day", ylab = "Frequency")
ggplot(stepsFilled, aes(x = steps)) +
geom_histogram(binwidth = 1000) +
labs(title = "Histogram of Steps per Day with Imputed Missing Values", xlab = "Steps per Day", ylab = "Frequency")
stepsMeanFilled <- mean(stepsFilled$steps, na.rm = TRUE)
stepsMedianFilled <- median(stepsMedian$steps, na.rm = TRUE)
stepsMedianFilled <- median(stepsFilled$steps, na.rm = TRUE)
activityDataFill <- mutate(activityDataFill, weektype = ifelse(weekdays(activityDataFill$date) == "Saturday" | weekdays(activityDataFill$date) == "Sunday", "weekend", "weekday"))
activityDataFill$weektype <- as.factor(activityDataFill$weektype)
head(activityDataFill)
intervalFilled <- activityDataFill %>%
group_by(interval, weektype) %>%
summarise(steps = mean(steps))
stepsWeektpye <- ggplot(intervalFilled, aes(x = interval, y = steps, color = weektype))
stepsWeektpye +
geom_line() +
facet_wrap(~weektype, ncol = 1, nrow = 2)
